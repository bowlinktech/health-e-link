/** 02.11.2014 **/

drop procedure `universaltranslator`.`runMacro`;


/** 02122014 Grace **/

INSERT INTO `universalTranslator`.`lu_ErrorCodes` (`displayText`, `description`, `status`) 
VALUES ('System Error', 'System Error, could be from crosswalks or macros', 1);

DELIMITER $$
CREATE Procedure `universaltranslator`.`setInboundOutBoundTables`(in foroutboundProcessing boolean) 
proc_main:begin

-- this SP sets the inbound / outbound tables
set @translatedTable = "transactionTranslatedIn";
set @transactionTable = "transactionIn";
set @batchTable = "batchUploads";
set @batchIdType = "batchId";
set @errorTable = "transactionInErrors";

if (foroutboundProcessing) THEN
BEGIN -- true
		set @translatedTable = "transactionTranslatedOut";
		set @transactionTable = "transactionTarget";
		set @batchTable = "batchDowloads";
		set @batchIdType = "batchDLId";
		set @errorTable = "transactionOutErrors";
END; 
END IF;

end proc_main$$
DELIMITER ;

/** 02132014 Grace **/
ALTER TABLE `universalTranslator`.`Macro_Names` 
CHANGE COLUMN `Category` `Category` VARCHAR(50) CHARACTER SET 'utf8' NULL DEFAULT 'Stored Procedure' ;

delete from `Macro_Names`;
INSERT INTO `Macro_Names` VALUES (1,'Stored Procedure','MatchFieldAUpdateFieldB','IF SFA = CON1, TFB = CON2',1,NULL,'MatchFieldAUpdateFieldB','','Please enter field number for matching','Please enter field number to update','Please enter the constant to match','Please enter the constant for update');

DELIMITER $$
CREATE Procedure `universaltranslator`.`MatchFieldAUpdateFieldB`(in configId int, 
in batchId int, in srcField varchar(10),
in fieldA varchar(10), in fieldB varchar(10), in con1 varchar(10), 
in con2 varchar(10), in macroId int, in foroutboundProcessing boolean, in passClear int) 
proc_main:begin

-- this SP matches FieldA with Con1 and then updates fieldB with Con2
-- this sets out table
call setInboundOutBoundTables (foroutboundProcessing);
select @translatedTable, @transactionTable, @batchTable, @batchIdType , @errorTable
into @translatedTable, @transactionTable, @batchTable, @batchIdType , @errorTable;

-- build our sql
set @stmt = concat("update ",@translatedTable, " set ",fieldB," = '",con2,"' where ",fieldA," = '",con1,"'
and ",@transactionTable,"Id in (select id from ",@transactionTable,
" where configId = ",configId," and ", @batchIdType," = ",batchId,");");

PREPARE stmt from @stmt;
EXECUTE stmt;-- execute

-- we check pass /clear
if (passClear = 2) THEN
BEGIN
set @stmt = concat("update ",@translatedTable, " set ",fieldB," = null where ",fieldB," != '",con2,"'
and ",@transactionTable,"Id in (select id from ",@transactionTable,
" where configId = ",configId," and ", @batchIdType," = ",batchId,");");
PREPARE stmt from @stmt;
EXECUTE stmt;-- execute
END;
END IF;

-- the only error for this is if SP bombs, no need to write in insert error logs
select '';
end proc_main$$
DELIMITER ;

/** grace 021314 **/
INSERT INTO `universalTranslator`.`macro_names` (`Macro_Name`, `Macro_Short_Name`, `Formula`, `FieldA_Question`, `Con1_Question`, `Con2_Question`) VALUES ('MatchFAUpdateSF', 'IF SFA = CON1, SF = CON2', 'MatchFAUpdateSF', 'Please enter field number to match', 'Please enter constant to match', 'Please enter constanct to update to');

/** Chad 2.13.14 @ 11:11 AM ** /
ALTER TABLE `universalTranslator`.`BatchDownloads` 
ADD COLUMN `lastDownloaded` DATETIME NULL AFTER `mergeable`;

/** Chad 2.13.14 @ 11:09 PM **/
ALTER TABLE `universalTranslator`.`rel_TransportFTPDetails` 
ADD COLUMN `port` VARCHAR(45) NULL AFTER `method`;
