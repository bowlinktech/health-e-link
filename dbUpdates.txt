/** Grace 03192014 01:24PM **/
ALTER TABLE `universaltranslator`.`transactioninerrors` 
DROP FOREIGN KEY `configFFFKId`;
ALTER TABLE `universaltranslator`.`transactioninerrors` 
CHANGE COLUMN `configurationFormFieldsId` `fieldNo` INT(11) NULL DEFAULT NULL ;


ALTER TABLE `universaltranslator`.`transactionouterrors` 
DROP FOREIGN KEY `configFFIdFK`;
ALTER TABLE `universaltranslator`.`transactionouterrors` 
CHANGE COLUMN `configurationFormFieldsId` `fieldNo` INT(11) NULL DEFAULT NULL ;


drop procedure insertValidationErrors;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertValidationErrors`(in vtType int, in fieldNo int,
in batchUploadId int, in configId int)
BEGIN

DECLARE regEx varchar(100) DEFAULT '';

CASE vtType
	WHEN 2 THEN set regEx = '^[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$';
    WHEN 3 THEN 
		BEGIN 
			CALL `universalTranslator`.`stripPhoneChars`(vtType, fieldNo, batchUploadId, configId);
			set regEx ='^[0-9]{7,11}$';
		END;
	WHEN 5 THEN set regEx = '^-?[0-9]+[.]?[0-9]*$|^-?[.][0-9]+$';
    ELSE
        BEGIN
        END;
	END 
	CASE;
 
set @stmt = concat(
'insert into transactionInerrors (batchUploadId, transactionInId, fieldNo, errorid, 
validationTypeId) SELECT ', batchUploadId, ', transactionInId, ',fieldNo,',2, ', vtType,'  
 FROM transactionTranslatedIn WHERE F' ,fieldNo, ' not REGEXP  "', regEx, '" and F',fieldNo, ' is not null 
and length(F', fieldNO, ') != 0
and configId = ', configId, ' and transactionInId 
in (select id from transactionIn where batchId = ', batchUploadId,' and configId = ', configId,' and statusId != 12);');

PREPARE stmt from @stmt;
EXECUTE stmt;

 END$$
DELIMITER ;


drop procedure stripPhoneChars;

DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `stripPhoneChars`(in vtType int, in fieldNo int,
in batchUploadId int, in configId int)
BEGIN
	DECLARE varToReplace varchar(100) DEFAULT '.';
	DECLARE part1 varchar(255) DEFAULT '.';
	DECLARE part2 varchar(25) DEFAULT '.';

	set part1 = concat("update transactiontranslatedIn JOIN (SELECT id from transactionIn WHERE configId = ",
	  configId,"  and batchId = ", batchUploadId, ") as ti ON transactiontranslatedIn.transactionInId = ti.id SET transactiontranslatedIn.F"
	  , fieldNo, " = replace(F", fieldNo, ", '");
	set part2 = "', '');";
	set @stmt = concat(part1, varToReplace, part2);
  	PREPARE stmt from @stmt;
	EXECUTE stmt;

	set varToReplace = '-';
	set @stmt = concat(part1, varToReplace, part2);
	PREPARE stmt from @stmt;
	EXECUTE stmt;

	set varToReplace = ')';
	set @stmt = concat(part1, varToReplace, part2);
	PREPARE stmt from @stmt;
	EXECUTE stmt;

	set varToReplace = '(';
	set @stmt = concat(part1, varToReplace, part2);
	PREPARE stmt from @stmt;
	EXECUTE stmt;

	set varToReplace = ' ';
	set @stmt = concat(part1, varToReplace, part2);
	PREPARE stmt from @stmt;
	EXECUTE stmt;

 END$$
DELIMITER ;

/** grace 03202014 01:06 PM **/
ALTER TABLE `universaltranslator`.`message_visitinfo` 
DROP COLUMN `incomeUnit`,
CHANGE COLUMN `income` `wklyIncome` FLOAT NULL DEFAULT NULL ,
ADD COLUMN `localFeeScale` VARCHAR(45) NULL AFTER `height`,
ADD COLUMN `residenceCode` VARCHAR(45) NULL AFTER `wklyIncome`;

CREATE TABLE `universaltranslator`.`message_races` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `transactionInId` INT NOT NULL,
  `sourceId` VARCHAR(45) NULL,
  `sourceDate` VARCHAR(45) NULL,
  `sourceDateType` VARCHAR(45) NULL,
  `white` BIT NULL,
  `black` BIT NULL,
  `am_indian_alaskan` BIT NULL,
  `asian` BIT NULL,
  `Hawaiian_pi` BIT NULL,
  `notReported` BIT NULL,
  `moreThanOneRace` BIT NULL,
  `dateCreated` DATETIME NOT NULL DEFAULT current_timestamp,
  PRIMARY KEY (`id`));

ALTER TABLE `universaltranslator`.`message_races` 
ADD INDEX `transactionInId_idx` (`transactionInId` ASC);
ALTER TABLE `universaltranslator`.`message_races` 
ADD CONSTRAINT `transactionInId`
  FOREIGN KEY (`transactionInId`)
  REFERENCES `universaltranslator`.`transactionin` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

CREATE TABLE `universaltranslator`.`lu_providerTypes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `displayText` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NULL,
  `isCustom` BIT NOT NULL DEFAULT 0,
  `status` BIT NOT NULL DEFAULT 1,
  `dateCreated` DATETIME NOT NULL DEFAULT current_timestamp,
  PRIMARY KEY (`id`));

INSERT INTO `universaltranslator`.`lu_providerTypes` (`id`,`displayText`) VALUES (1,'Physician');
INSERT INTO `universaltranslator`.`lu_providerTypes` (`id`,`displayText`) VALUES (2,'NP/APRN/CNM/PA');
INSERT INTO `universaltranslator`.`lu_providerTypes` (`id`,`displayText`) VALUES (3,'RN/LPN');
INSERT INTO `universaltranslator`.`lu_providerTypes` (`id`,`displayText`) VALUES (4,'Counselor/CHE');

ALTER TABLE `universaltranslator`.`message_visitinfo` 
ADD COLUMN `providerTypeId` INT NULL AFTER `localFeeScale`;


ALTER TABLE `universaltranslator`.`message_visitinfo` 
DROP FOREIGN KEY `messContraFK`;
ALTER TABLE `universaltranslator`.`message_visitinfo` 
CHANGE COLUMN `contraceptiveId` `primaryContraceptiveId` INT(11) NULL DEFAULT NULL COMMENT 'id in lu_Contractives' ,
ADD COLUMN `secondContraceptiveId` INT NULL AFTER `primaryContraceptiveId`,
ADD COLUMN `noContraceptiveId` INT NULL AFTER `secondContraceptiveId`;
  
/** grace 03202014 03:27PM **/

CREATE TABLE `universaltranslator`.`lu_insuranceCoverage` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `displayText` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NULL,
  `isCustom` BIT NOT NULL DEFAULT 0,
  `status` BIT NOT NULL DEFAULT 1,
  `dateCreated` DATETIME NOT NULL DEFAULT current_timestamp,
  PRIMARY KEY (`id`));

ALTER TABLE `universaltranslator`.`message_visitinfo` 
ADD COLUMN `insuranceCoverageId` INT NULL AFTER `providerTypeId`;

INSERT INTO `universaltranslator`.`lookuptables` (`utTableName`, `displayText`, `urlId`) VALUES ('lu_insuranceCoverage', 'Insurance Coverage Types', '23424Ins48329age');
INSERT INTO `universaltranslator`.`lookuptables` (`utTableName`, `displayText`, `urlId`) VALUES ('lu_providerTypes', 'Provider Types', '4200Pro1228pes');
INSERT INTO `universaltranslator`.`lu_insuranceCoverage` (`id`,`displayText`) VALUES (1,'Public Insurance');
INSERT INTO `universaltranslator`.`lu_insuranceCoverage` (`id`,`displayText`) VALUES (2,'Private Insurance');
INSERT INTO `universaltranslator`.`lu_insuranceCoverage` (`id`,`displayText`) VALUES (3,'Uninsured');
INSERT INTO `universaltranslator`.`lu_insuranceCoverage` (`id`,`displayText`) VALUES (4,'Unknown / Not Reported');

CREATE TABLE `message_localCodes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `transactionInId` int(11) NOT NULL,
  `sourceId` varchar(45) DEFAULT NULL,
  `sourceDate` varchar(45) DEFAULT NULL,
  `sourceDateType` varchar(45) DEFAULT NULL,
  `localCode` varchar(45) DEFAULT NULL,
  `dateCreated` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

ALTER TABLE `universaltranslator`.`message_localCodes` 
ADD INDEX `lcTInId_idx` (`transactionInId` ASC);
ALTER TABLE `universaltranslator`.`message_localCodes` 
ADD CONSTRAINT `lcTInId`
  FOREIGN KEY (`transactionInId`)
  REFERENCES `universaltranslator`.`transactionin` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;
  
 ALTER TABLE `universaltranslator`.`message_visitinfo` 
ADD COLUMN `SiteId` INT NULL AFTER `transactionInId`;
  
INSERT INTO `universaltranslator`.`macro_names` (`ID`, `Category`, `Macro_Name`, `Macro_Short_Name`, `Formula`, `FieldA_Question`, `FieldB_Question`, `Con2_Question`) VALUES ('70', 'String manipulation', 'Set field to null', 'field=null', 'setFieldToNull', 'Please enter in field number to set null, leave blank if src', 'Please enter in field to match, if appicable', 'Please enter in value to match, if applicable');
  
DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `setFieldToNull`(in configId int, 
in batchId int, in srcField varchar(10),
in fieldA varchar(10), in fieldB varchar(10), in con1 varchar(10), 
in con2 varchar(10), in macroId int, in foroutboundProcessing boolean, in passClear int)
proc_main:begin

-- this SP matches FieldA with Con1 and then updates fieldB with Con2
-- this sets out table
call setInboundOutBoundTables (foroutboundProcessing);
select @translatedTable, @transactionTable, @batchTable, @batchIdType , @errorTable
into @translatedTable, @transactionTable, @batchTable, @batchIdType , @errorTable;

call getFinalStatusIds;
select @finalStatusIds into @finalStatusIds;


-- build our sql
set @stmt = concat("update ",@translatedTable, " set ",fieldA," = null where ");

if (fieldB != 'F') then 
set @stmt = concat(@stmt, fieldB," = '",con2,"' and ");
end if;

set @stmt =concat(@stmt, @transactionTable,"Id in (select id from ",@transactionTable,
" where configId = ",configId," and ", @batchIdType," = ",batchId," and statusId not in (",@finalStatusIds ,"));");

PREPARE stmt from @stmt;
EXECUTE stmt;-- execute

-- we check pass /clear
if (passClear = 2) THEN
BEGIN

END;
END IF;

-- the only error for this is if SP bombs, no need to write in insert error logs
select '';
end proc_main$$
DELIMITER ;
  
CREATE TABLE `universaltranslator`.`lu_noContraceptiveReasons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `displayText` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NULL,
  `isCustom` BIT NOT NULL DEFAULT 0,
  `status` BIT NOT NULL DEFAULT 1,
  `dateCreated` DATETIME NOT NULL DEFAULT current_timestamp,
  PRIMARY KEY (`id`));
  
 INSERT INTO `universaltranslator`.`lookuptables` (`utTableName`, `displayText`, `urlId`) VALUES ('lu_noContraceptiveReasons', 'Reason for No Contraceptives', '3478Noc3823sons');
  
 INSERT INTO `universaltranslator`.`macro_names` (`id`,`Category`, `Macro_Name`, `Macro_Short_Name`, `Formula`, `Con1_Question`, `Con2_Question`) VALUES (71, 'String manipulation', 'Add character to specific locations on strings', 'addCharsToString', 'addCharsToString', 'Please enter char to add', 'Please enter position for character');
  
  
  
  
